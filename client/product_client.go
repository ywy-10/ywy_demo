// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package main

import (
	"context"
	proto "github.com/ywy-10/ywy_demo/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GoodCreateRequest  = proto.GoodCreateRequest
	GoodCreateResponse = proto.GoodCreateResponse
	GoodDetailRequest  = proto.GoodDetailRequest
	GoodDetailResponse = proto.GoodDetailResponse
	GoodPriceRequest   = proto.GoodPriceRequest
	GoodPriceResponse  = proto.GoodPriceResponse
	SearchRequest      = proto.SearchRequest
	SearchResponse     = proto.SearchResponse

	ProductService interface {
		Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
		GoodCreate(ctx context.Context, in *GoodCreateRequest, opts ...grpc.CallOption) (*GoodCreateResponse, error)
		GoodDetail(ctx context.Context, in *GoodDetailRequest, opts ...grpc.CallOption) (*GoodDetailResponse, error)
		GoodPrice(ctx context.Context, in *GoodPriceRequest, opts ...grpc.CallOption) (*GoodPriceResponse, error)
	}

	defaultProductService struct {
		cli zrpc.Client
	}
)

func NewProductService(cli zrpc.Client) ProductService {
	return &defaultProductService{
		cli: cli,
	}
}

func (m *defaultProductService) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	client := proto.NewProductServiceClient(m.cli.Conn())
	return client.Search(ctx, in, opts...)
}

func (m *defaultProductService) GoodCreate(ctx context.Context, in *GoodCreateRequest, opts ...grpc.CallOption) (*GoodCreateResponse, error) {
	client := proto.NewProductServiceClient(m.cli.Conn())
	return client.GoodCreate(ctx, in, opts...)
}

func (m *defaultProductService) GoodDetail(ctx context.Context, in *GoodDetailRequest, opts ...grpc.CallOption) (*GoodDetailResponse, error) {
	client := proto.NewProductServiceClient(m.cli.Conn())
	return client.GoodDetail(ctx, in, opts...)
}

func (m *defaultProductService) GoodPrice(ctx context.Context, in *GoodPriceRequest, opts ...grpc.CallOption) (*GoodPriceResponse, error) {
	client := proto.NewProductServiceClient(m.cli.Conn())
	return client.GoodPrice(ctx, in, opts...)
}
